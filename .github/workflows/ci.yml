name: Frontend CI

on:
  push:
    branches:
      - develop 
      - 'release/**'
  pull_request:
    branches:
      - develop
      - 'release/**'
      - main

jobs:
  unit-tests:
    name: 🔨 Unit Tests
    runs-on: ubuntu-latest
    # skip-ci / ci skip 메시지가 있으면 이 Job 전체를 건너뜁니다.
    if: >
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && (
        (
          github.event_name == 'pull_request'
          && (
            github.base_ref == 'develop' && contains(github.head_ref, '-feat-')
            || github.base_ref == 'main'    && startsWith(github.head_ref, 'hotfix/')
          )
        )
        || (
          github.event_name == 'push'
          && github.ref == 'refs/heads/develop'
        )
      )
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm ci
      - name: Run Unit (Build) Test
        run: npm run test:unit

  integration-tests:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    # skip-ci / ci skip 메시지가 있으면 이 Job 전체를 건너뜁니다.
    # PR: release ← develop, main ← release/*, main ← hotfix/*, main ← develop
    # Push: develop→develop, release/*→release/*, main→main
    if: >
      !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && (
        (
          github.event_name == 'pull_request'
          && (
            github.base_ref == 'release' && github.head_ref == 'develop'
            || github.base_ref == 'main'    && startsWith(github.head_ref, 'release/')
            || github.base_ref == 'main'    && startsWith(github.head_ref, 'hotfix/')
            || github.base_ref == 'main'    && github.head_ref == 'develop'
          )
        )
        || (
          github.event_name == 'push'
          && (
               github.ref == 'refs/heads/develop'
            || startsWith(github.ref, 'refs/heads/release/')
            || github.ref == 'refs/heads/main'
          )
        )
      )
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: community_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s --health-retries=3
    env:
      BACKEND_PORT: 8080
      FRONTEND_PORT: 4173
    steps:
      - uses: actions/checkout@v3

      - name: Checkout Backend for Integration
        uses: actions/checkout@v3
        with:
          repository: 100-hours-a-week/9_meow_be
          token: ${{ secrets.GITHUB_TOKEN }}
          path: backend

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Start Backend with DB
        run: |
          cd backend
          mvn clean package -DskipTests
          java -jar target/*.jar &

      - name: Wait for Backend Health
        run: |
          for i in {1..12}; do
            curl -sf http://localhost:$BACKEND_PORT/api/health && break
            sleep 5
          done

      - name: Build & Preview Frontend
        run: |
          npm run build
          npm run preview &

      - name: Wait for Frontend Ready
        run: |
          for i in {1..6}; do
            curl -sf http://localhost:$FRONTEND_PORT/ && break
            sleep 5
          done

      - name: Check Backend API via Frontend
        run: curl -f http://localhost:$FRONTEND_PORT/api/health